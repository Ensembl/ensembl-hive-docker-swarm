
* One way to give the container access to the Engine is via the same REST API
    that is used by the client to talk to the same Docker Engine.

    Mounting the socket file while creating the container:
        docker run -it -v/var/run/docker.sock:/var/run/docker.sock ensemblorg/ensembl-hive

    Using it from inside (make sure the container has CURL) :
        curl --unix-socket /var/run/docker.sock http:/v1.30/info | json_pp
    or
        curl --unix-socket /var/run/docker.sock http:/v1.30/info | python3 -m json.tool

* Docker Engine REST API:
    https://docs.docker.com/engine/api/v1.30/

* We need both 'curl' and 'json_pp' for development, but can probably do without them in production:
    https://stackoverflow.com/questions/34582918/how-to-work-with-http-web-server-via-file-socket-in-perl
    use JSON;

* Hostname on each container is a 12-hexdigit prefix of the container_id obtainable from:
    curl --unix-socket /var/run/docker.sock http:/v1.30/containers/json | json_pp
    May need to truncate the output of the latter to 12 hexadigits to make them comparable.

* Container_ids (esp. truncated!) are unique within one Docker Engine,
    but are not guaranteed to be unique across the Swarm

